[tool.poetry]
name = "karzas-latter-seiler"
version = "0.1.0"
description = "The Karzas-Latter-Seiler Model of a High-Altitude Electromagnetic Pulse"
authors = ["Gavin Hartnett <hartnett@rand.org>"]
readme = "README.md"
packages = [{include = "emp"}]

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
matplotlib = "^3.7.1"
numpy = "^1.23.5"
pandas = "^2.0.1"
scipy = "^1.10.1"
seaborn = "^0.12.2"
tqdm = "^4.65.0"
branca = "^0.4.2"
cycler = "^0.11.0"
folium = "^0.12.1"
geojsoncontour = "^0.4.0"
ppigrf = "^1.0.2"
selenium = "^4.17.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^24.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

[tool.poetry.group.docs.dependencies]
coverage = "^7.0"
sphinx = "^8.2.3"
sphinx-rtd-theme = "^3.0.2"
sphinx-autodoc-typehints = "^3.2.0"
toml = "^0.10.2"
sphinx-autobuild = "^2024.10.3"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
     /(
         docs
         | notebooks
     )/
)
'''

[tool.isort]
profile = "black"
force_grid_wrap = 2
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=emp",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "scipy.*",
    "numpy.*",
    "pandas.*",
    "seaborn.*",
    "tqdm.*",
    "folium.*",
    "geojsoncontour.*",
    "ppigrf.*",
    "selenium.*",
    "branca.*",
    "cycler.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["emp"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
